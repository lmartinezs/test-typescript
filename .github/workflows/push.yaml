name: tests

on:
  push:
    branches:
      - master
jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: 'npm'
    - name: Install dependencies
      run: |      
          npm i
          chmod -R a+x node_modules
          mkdir reports
          npx playwright install --with-deps chrome
    - name: reporter
      run: |        
        #npm install cucumber-html-reporter --save-dev
        npm install multiple-cucumber-html-reporter --save-dev
        npm test        
        #npm run test:report
        #npm run test:reportm
        cp -r reports/*.json reports/html/.
    - name: "read report"
      if: ${{ always() }}
      run: |
        more reports/report.json
        npm run test:reportm        
    - name: generate table1
      if: ${{ always() }}
      run: |           
        #sh createtable.sh        
        
        temp=$(report="##### Scenarios:"
          for file in $(ls reports/*.json); do 
              name=$(jq -r '.[] | .name' $file)
              total_steps=$(jq '.[] | .elements[].steps[].result.status' $file | wc -l)
              failed_steps=$(jq -r '.[] | .elements[].steps[].result.status' $file | grep "failed" | wc -l)
              passed_steps=$(jq '.[] | .elements[].steps[].result.status' $file | grep "passed" | wc -l)
              steps_length=$(jq -r '.[] | .elements[].steps[].name' $file | wc -l)    
              iconStatus=$(if [ $failed_steps -gt 0 ]; then echo ":negative_squared_cross_mark:"; else echo ":heavy_check_mark:"; fi)
              header="| step | keyword | status | location |\n| ------ | ------ | ------ | ------ |";
              scenario="<details> <summary>$iconStatus $name | Total: $total_steps | Passed: $passed_steps | Failed: $failed_steps | </summary>"
              steps=""
                  for i in $(seq 0 $(($steps_length-1))); do
                      stepName=$(jq -r ".[] | .elements[].steps[$i].name" $file)
                      keyword=$(jq -r ".[] | .elements[].steps[$i].keyword" $file)
                      status=$(jq -r ".[] | .elements[].steps[$i].result.status" $file)            
                      iconStepStatus=$(if [ "$status" = "failed" ]; then echo ":negative_squared_cross_mark:"; else echo ":heavy_check_mark:"; fi)            
                      location=$(jq -r ".[] | .elements[].steps[$i].match.location" $file)                        
                      header="${header}| $stepName | $keyword | $iconStepStatus $status | $location |\n";
                  done
              report="${report}${scenario}${header} </details>\n"              
          done 
          echo $report)
          SUMMARY=$temp
          echo "$SUMMARY" >> $GITHUB_STEP_SUMMARY
    - uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: reports
        path: reports/html
